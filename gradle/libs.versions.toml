[versions]
micrometer = "1.14.4"
micrometerTracing = "1.4.3"
junit = "5.11.3"
roaster = "2.30.1.Final" # last using jdk8
handlebars = "4.3.1"
picocli = "4.7.6"
logback = "1.5.12"
slf4j = "1.7.36"
assertj = "3.27.3"
mockito = "5.5.0"
asmForPlugins = "7.3.1"
javaFormatForPlugins = "0.0.43"
jsr305 = "3.0.2"

[libraries]
roasterApi = { module = "org.jboss.forge.roaster:roaster-api", version.ref = "roaster" }
roasterJdt = { module = "org.jboss.forge.roaster:roaster-jdt", version.ref = "roaster" }
handlebars = { module = "com.github.jknack:handlebars", version.ref = "handlebars" }
picocli = { module = "info.picocli:picocli", version.ref = "picocli" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
mockitoCore = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockitoInline = { module = "org.mockito:mockito-inline", version.ref = "mockito" }
micrometerBom = { module = "io.micrometer:micrometer-bom", version.ref = "micrometer" }
micrometerTracingBom = { module = "io.micrometer:micrometer-tracing-bom", version.ref = "micrometerTracing" }
junitBom = { module = "org.junit:junit-bom", version.ref = "junit" }
asmForPlugins = { module = "org.ow2.asm:asm", version.ref = "asmForPlugins" }
javaFormatForPlugins = { module = "io.spring.javaformat:spring-javaformat-checkstyle", version.ref = "javaFormatForPlugins" }
jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "jsr305" }

# plugin dependencies
plugin-license = { module = "gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin", version = "0.16.1" }
plugin-nebulaRelease = { module = "com.netflix.nebula:nebula-release-plugin", version = "18.0.8" }
plugin-nebulaPublishing = { module = "com.netflix.nebula:nebula-publishing-plugin", version = "20.3.0" }
plugin-nebulaProject = { module = "com.netflix.nebula:nebula-project-plugin", version = "10.1.5" }
plugin-nebulaInfo = { module = "com.netflix.nebula:gradle-info-plugin", version = "12.1.6" }
plugin-noHttp = { module = "io.spring.nohttp:nohttp-gradle", version = "0.0.11" }
plugin-nexusPublish = { module = "io.github.gradle-nexus:publish-plugin", version = "1.3.0" }
plugin-javaformat = { module = "io.spring.javaformat:spring-javaformat-gradle-plugin", version = "0.0.43" }
plugin-spring-antora = { module = "io.spring.gradle.antora:spring-antora-plugin", version = "0.0.1" }
plugin-antora = { module = "org.antora:gradle-antora-plugin", version = "1.0.0" }

[plugins]
